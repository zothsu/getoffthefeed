---
import { blogItems, type BlogItem } from '../data/blogItems';
import BlogCard from './ui/BlogCard.astro';

// Interface for pagination (unchanged)
export interface PaginationItemType {
  label: string;
  href: string;
  isActive: boolean;
  iconKey?: 'prev' | 'next';
}

// Function to map icon keys to SVG paths
const getIconPath = (iconKey: string): string[] => {
  const iconPaths: Record<string, string[]> = {
    prev: ['M15 19l-7-7 7-7'],
    next: ['M9 5l7 7-7 7'],
  };
  return iconPaths[iconKey] || [];
};

const paginationData: PaginationItemType[] = [
  { label: 'Previous', href: '#', isActive: false, iconKey: 'prev' },
  { label: '1', href: '#', isActive: true },
  { label: '2', href: '#', isActive: false },
  { label: '3', href: '#', isActive: false },
  { label: 'Next', href: '#', isActive: false, iconKey: 'next' },
];
---

<section class="py-16 relative overflow-hidden">
  <div class="absolute inset-0 cyber-grid opacity-20"></div>
  <div class="max-w-7xl mx-auto px-4 relative">
    <!-- Blog Grid -->
    <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
      {blogItems.map((post) => (
        <BlogCard
          href={post.href}
          image={post.image}
          alt={post.alt}
          tag={post.tag}
          date={post.date}
          title={post.title}
          description={post.description}
          color={post.color}
        />
      ))}
    </div>

    <!-- Pagination -->
    <div class="mt-12 flex justify-center">
      <nav aria-label="Pagination" class="inline-flex gap-2">
        {paginationData.map((item) => (
          <a
            href={item.href}
            class={
              item.isActive
                ? 'px-4 py-2 bg-neon-cyan/20 border border-neon-cyan text-neon-cyan rounded font-bold'
                : 'px-4 py-2 bg-dark-space border border-gray-600 text-gray-400 rounded hover:bg-neon-cyan/10 hover:border-neon-cyan hover:text-neon-cyan transition duration-300'
            }
            aria-label={item.label}
            aria-current={item.isActive ? 'page' : undefined}
          >
            {item.iconKey ? (
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-5 w-5"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                {getIconPath(item.iconKey).map((path) => (
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d={path}
                  />
                ))}
              </svg>
            ) : (
              item.label
            )}
          </a>
        ))}
      </nav>
    </div>
  </div>
</section>