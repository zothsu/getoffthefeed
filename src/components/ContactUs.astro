---
import Button from "./ui/Button.astro";

export interface ContactInfoType {
  id: string;
  iconKey: string;
  label: string;
  href?: string; // Optional for non-link items like location
}

export interface SocialLinkType {
  id: string;
  iconKey: string;
  href: string;
  label: string;
}

export interface ContactHeaderType {
  label: string;
  title: string;
  description: string;
}

// Function to map icon keys to SVG paths
const getIconPath = (iconKey: string): string[] => {
  const iconPaths: Record<string, string[]> = {
    email: ['M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z'],
    phone: ['M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z'],
    location: [
      'M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z',
      'M15 11a3 3 0 11-6 0 3 3 0 016 0z',
    ],
    github: ['M12 2A10 10 0 002 12c0 4.42 2.87 8.17 6.84 9.5.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34-.46-1.16-1.11-1.47-1.11-1.47-.91-.62.07-.6.07-.6 1 .07 1.53 1.03 1.53 1.03.87 1.52 2.34 1.07 2.91.83.09-.65.35-1.09.63-1.34-2.22-.25-4.55-1.11-4.55-4.92 0-1.11.38-2 1.03-2.71-.1-.25-.45-1.29.1-2.68 0 0 .84-.27 2.75 1.02A9.564 9.564 0 0112 6.8c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.03 1.6 1.03 2.71 0 3.82-2.34 4.66-4.57 4.91.36.31.69.92.69 1.85V21c0 .27.16.59.67.5C19.14 20.16 22 16.42 22 12A10 10 0 0012 2z'],
    instagram: ['M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.148 3.227-1.691 4.746-4.919 4.894-1.265.058-1.645.069-4.849.069-3.204 0-3.584-.012-4.849-.069-3.227-.148-4.746-1.691-4.894-4.919-.058-1.265-.069-1.645-.069-4.849 0-3.204.012-3.584.069-4.849.148-3.252 1.691-4.771 4.919-4.919 1.265-.058 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.058 1.281-.072 1.689-.072 4.948 0 3.259.014 3.667.072 4.947.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.667-.014 4.947-.072 4.358-.2 6.78-2.618 6.98-6.98.058-1.281.072-1.689.072-4.948 0-3.259-.014-3.667-.072-4.947-.2-4.358-2.618-6.78-6.98-6.98-1.281-.058-1.689-.072-4.948-.072zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z'],
    linkedin: ['M4.98 3.5c0 1.381-1.11 2.5-2.48 2.5s-2.48-1.119-2.48-2.5c0-1.38 1.11-2.5 2.48-2.5s2.48 1.12 2.48 2.5zm.02 4.5h-5v16h5v-16zm7.982 0h-4.968v16h4.969v-8.399c0-4.67 6.029-5.052 6.029 0v8.399h4.988v-10.131c0-7.88-8.922-7.593-11.018-3.714v-2.155z'],
    x: ['M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z'],
  };
  return iconPaths[iconKey] || [];
};

const contactInfoData: ContactInfoType[] = [
  {
    id: 'email',
    iconKey: 'email',
    label: 'mark@neodev.io',
    href: 'mailto:mark@neodev.io',
  },
  {
    id: 'phone',
    iconKey: 'phone',
    label: '+1 (234) 567-890',
    href: 'tel:+1234567890',
  },
  {
    id: 'location',
    iconKey: 'location',
    label: 'San Francisco, CA',
  },
];

const socialLinksData: SocialLinkType[] = [
  {
    id: 'github',
    iconKey: 'github',
    href: '#', // Replace with actual link
    label: 'GitHub',
  },
  {
    id: 'instagram',
    iconKey: 'instagram',
    href: '#', // Replace with actual link
    label: 'Instagram',
  },
  {
    id: 'linkedin',
    iconKey: 'linkedin',
    href: '#', // Replace with actual link
    label: 'LinkedIn',
  },
  {
    id: 'x',
    iconKey: 'x',
    href: '#', // Replace with actual link
    label: 'X',
  },
];

const contactHeaderData: ContactHeaderType = {
  label: '// GET IN TOUCH',
  title: 'Let’s Build <span class="text-neon-purple neon-purple-text">Together</span>',
  description:
    'Ready to transform your ideas into reality? Reach out, and let’s create something extraordinary.',
};
---

<section id="contact" class="py-20 lg:py-24 relative overflow-hidden">
  <div class="absolute inset-0 cyber-grid opacity-30"></div>
  <div class="absolute top-0 left-0 w-96 h-96 bg-neon-cyan/10 rounded-full blur-3xl"></div>
  <div class="absolute bottom-0 right-0 w-96 h-96 bg-neon-purple/10 rounded-full blur-3xl"></div>

  <div class="max-w-7xl mx-auto px-4 relative">
    <!-- Section Header -->
    <div class="mb-16 text-center">
      <span class="text-neon-purple font-code">{contactHeaderData.label}</span>
      <h2 class="text-4xl md:text-5xl font-bold mt-2" set:html={contactHeaderData.title} />
      <div class="h-1 w-24 bg-neon-cyan mx-auto mt-4"></div>
      <p class="text-gray-300 max-w-3xl mx-auto mt-6">{contactHeaderData.description}</p>
    </div>

    <!-- Contact Content -->
    <div class="grid md:grid-cols-2 gap-8">
      <!-- Contact Form -->
      <div class="bg-dark-space/80 backdrop-blur-md border border-neon-cyan/30 rounded-lg p-6 sm:p-8">
        <form
          action="/submit-contact"
          method="POST"
          x-data="{ form: { name: '', email: '', message: '' }, errors: {} }"
          @submit.prevent="errors = {}; /* Add your form submission logic here */"
        >
          <div class="space-y-6">
            <!-- Name Field -->
            <div>
              <label for="name" class="block text-neon-cyan font-bold mb-2">Name</label>
              <input
                type="text"
                id="name"
                name="name"
                x-model="form.name"
                placeholder="Your Name"
                class="w-full px-4 py-3 bg-dark-space border border-gray-600 rounded focus:border-neon-cyan focus:ring-2 focus:ring-neon-cyan/50 text-gray-300 transition duration-300"
                required
              />
              <p x-show="errors.name" x-text="errors.name" class="text-red-400 text-sm mt-1"></p>
            </div>

            <!-- Email Field -->
            <div>
              <label for="email" class="block text-neon-cyan font-bold mb-2">Email</label>
              <input
                type="email"
                id="email"
                name="email"
                x-model="form.email"
                placeholder="Your Email"
                class="w-full px-4 py-3 bg-dark-space border border-gray-600 rounded focus:border-neon-cyan focus:ring-2 focus:ring-neon-cyan/50 text-gray-300 transition duration-300"
                required
              />
              <p x-show="errors.email" x-text="errors.email" class="text-red-400 text-sm mt-1"></p>
            </div>

            <!-- Message Field -->
            <div>
              <label for="message" class="block text-neon-cyan font-bold mb-2">Message</label>
              <textarea
                id="message"
                name="message"
                x-model="form.message"
                placeholder="Tell me about your project..."
                rows="5"
                class="w-full px-4 py-3 bg-dark-space border border-gray-600 rounded focus:border-neon-cyan focus:ring-2 focus:ring-neon-cyan/50 text-gray-300 transition duration-300 resize-none"
                required
              ></textarea>
              <p x-show="errors.message" x-text="errors.message" class="text-red-400 text-sm mt-1"></p>
            </div>

            <!-- Submit Button -->
            <div>
              <Button submit={true} variant="filled" color="purple" class="w-full">
                 SEND MESSAGE
              </Button>
            </div>
          </div>
        </form>
      </div>

      <!-- Contact Info and CTA -->
      <div class="space-y-8">
        <!-- Contact Information -->
        <div class="bg-dark-space/80 backdrop-blur-md border border-neon-purple/30 rounded-lg p-6 sm:p-8">
          <h3 class="text-xl font-bold text-neon-purple mb-6">Connect Directly</h3>
          <ul class="space-y-4 text-gray-300">
            {contactInfoData.map((info) => (
              <li class="flex items-center">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-6 w-6 text-neon-cyan mr-3"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  {getIconPath(info.iconKey).map((path) => (
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d={path}
                    />
                  ))}
                </svg>
                {info.href ? (
                  <a href={info.href} class="hover:text-neon-cyan transition duration-300">
                    {info.label}
                  </a>
                ) : (
                  <span>{info.label}</span>
                )}
              </li>
            ))}
          </ul>
        </div>

        <!-- Social Links -->
        <div class="bg-dark-space/80 backdrop-blur-md border border-neon-cyan/30 rounded-lg p-6 sm:p-8">
          <h3 class="text-xl font-bold text-neon-cyan mb-6">Follow My Journey</h3>
          <div class="flex items-center gap-4">
            {socialLinksData.map((link) => (
              <a
                href={link.href}
                target="_blank"
                class="text-gray-300 hover:text-neon-cyan transition duration-300"
                aria-label={link.label}
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class={link.id === 'github' || link.id === 'x' ? 'h-8 w-8' : 'h-7 w-7'}
                  fill="currentColor"
                  viewBox="0 0 24 24"
                >
                  {getIconPath(link.iconKey).map((path) => (
                    <path d={path} />
                  ))}
                </svg>
              </a>
            ))}
          </div>
        </div>
      </div>
    </div>
  </div>
</section>